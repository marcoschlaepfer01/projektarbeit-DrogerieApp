@page "/lindaaff-form"
@rendermode InteractiveServer
@using System.Net.Http.Json
@using DrogerieApp.ClassLibrary.ContentModels.Lindaaff
@using DrogerieApp.RazorClassLibrary.Components
@inject BackendClient BackendClient

<div class="container mt-4">
    <h3 class="text-primary text-center mb-4">Lindaaff Formular</h3>
    <EditForm Model="content" OnValidSubmit="SubmitForm" class="shadow p-4 rounded bg-light">
        <DataAnnotationsValidator />
        <ValidationSummary class="alert alert-danger" />

        <div class="row mb-4">
            <div class="col-md-4 text-center">
                <h5 class="mb-3">Wähle betroffene Körperteile</h5>
                <div class="d-flex justify-content-center">
                    <div>
                        <HumanBody TriggerCallback="OnBodyClicked" />
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="row mb-3 justify-content-center">
                    <div class="col-md-8">
                        <label class="form-label">Lokalisierung (zusätzliche Infos)</label>
                        <InputText @bind-Value="content.AdditionalLocalizationNotes" class="form-control" placeholder="Gib zusätzliche Informationen zur Lokalisierung an" />
                    </div>
                </div>
                <div class="row mb-3 justify-content-center">
                    <div class="col-md-8">
                        <label class="form-label">Intensität</label>
                        <InputText @bind-Value="content.Intensity" class="form-control" placeholder="Schätze die Intensität (z.B., 1-10)" />
                    </div>
                </div>
                <div class="row mb-3 justify-content-center">
                    <div class="col-md-8">
                        <label class="form-label">Natur</label>
                        <InputText @bind-Value="content.Nature" class="form-control" placeholder="Beschreibe die Art der Symptome" />
                    </div>
                </div>
                <div class="row mb-3 justify-content-center">
                    <div class="col-md-8">
                        <label class="form-label">Dauer</label>
                        <InputText @bind-Value="content.Duration" class="form-control" placeholder="Wie lange sind die Symptome schon vorhanden?" />
                    </div>
                </div>
                <div class="row mb-3 justify-content-center">
                    <div class="col-md-8">
                        <label class="form-label">Andere Symptome</label>
                        <InputText @bind-Value="content.OtherSymptoms" class="form-control" placeholder="Zähle weitere Symptome auf" />
                    </div>
                </div>
                <div class="row mb-3 justify-content-center">
                    <div class="col-md-8">
                        <label class="form-label">Verschlimmernde Faktoren</label>
                        <InputText @bind-Value="content.WorseningFactors" class="form-control" placeholder="Was macht es schlimmer?" />
                    </div>
                </div>
                <div class="row mb-3 justify-content-center">
                    <div class="col-md-8">
                        <label class="form-label">Verbessernde Faktoren</label>
                        <InputText @bind-Value="content.AlleviatingFactors" class="form-control" placeholder="Was macht es besser?" />
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-center">
            <button type="submit" class="btn btn-primary btn-lg px-5">Einreichen</button>
        </div>
    </EditForm>

    @if (showStatus)
    {
        <div class="mt-4 p-4 bg-light rounded shadow-sm">
            <h5 class="text-secondary">Resultat</h5>
            @if (isLoading)
            {
                <div class="spinner-border text-primary me-2" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <span>Die Anfrage wird verarbeitet...</span>
            }
            else if (responseData != null)
            {
                <!-- Condition Overview -->
                <div class="row mb-2">
                    <div class="col-3 fw-bold">Beschwerde:</div>
                    <div class="col-9">
                        @responseData["conditionName"]
                        @if (responseData.ContainsKey("conditionUmlsCode") && !string.IsNullOrWhiteSpace(responseData["conditionUmlsCode"]))
                        {
                            <span class="text-muted">(UMLS: @responseData["conditionUmlsCode"])</span>
                        }
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-3 fw-bold">Beschreibung der Beschwerde:</div>
                    <div class="col-9">@responseData["conditionDescription"]</div>
                </div>

                <hr />

                <!-- Medication -->
                <h5>Medikament</h5>
                <div class="row mb-2">
                    <div class="col-3 fw-bold">Name:</div>
                    <div class="col-9">
                        <a href="@responseData["medicationUrl"]" target="_blank">
                            @responseData["medicationName"]
                        </a>
                        @if (responseData.ContainsKey("medicationUmlsCode") && !string.IsNullOrWhiteSpace(responseData["medicationUmlsCode"]))
                        {
                            <span class="text-muted">(UMLS: @responseData["medicationUmlsCode"])</span>
                        }
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-3 fw-bold">Beschreibung:</div>
                    <div class="col-9">@responseData["medicationDescription"]</div>
                </div>
                <div class="row mb-2">
                    <div class="col-3 fw-bold">Charakteristiken:</div>
                    <div class="col-9">@responseData["medicationCharacteristics"]</div>
                </div>
                <div class="row mb-2">
                    <div class="col-3 fw-bold">ATC Code:</div>
                    <div class="col-9">@responseData["medicationAtc"]</div>
                </div>
                <div class="row mb-2">
                    <div class="col-3 fw-bold">Dosis:</div>
                    <div class="col-9">@responseData["medicationDose"]</div>
                </div>
                <div class="row mb-2">
                    <div class="col-3 fw-bold">Indikation:</div>
                    <div class="col-9">@responseData["medicationIndication"]</div>
                </div>
                <div class="row mb-2">
                    <div class="col-3 fw-bold">Kontraindikation:</div>
                    <div class="col-9">@responseData["medicationContraIndication"]</div>
                </div>
                <div class="row mb-2">
                    <div class="col-3 fw-bold">Abgabekategorie:</div>
                    <div class="col-9">@responseData["medicationNarcoticCode"]</div>
                </div>
                <div class="row mb-4">
                    <div class="col-3 fw-bold">Bild:</div>
                    <div class="col-9">
                        <img src="@responseData["medicationImageUrl"]" alt="Medication image" style="max-width: 150px;" />
                    </div>
                </div>

                <hr />

                <!-- Explanation -->
                <div class="row">
                    <div class="col-3 fw-bold">Erklärung:</div>
                    <div class="col-9">@responseData["explanation"]</div>
                </div>
            }
            else
            {
                <p class="text-danger">Keine Daten verfügbar.</p>
            }
        </div>
    }
</div>

@code {
    private LindaaffContent content = new LindaaffContent();
    private bool isLoading = false;
    private bool showStatus = false;
    private Dictionary<string, string> responseData;
    private SemaphoreSlim semaphore = new SemaphoreSlim(1);

    private async Task SubmitForm()
    {
        await semaphore.WaitAsync();
        try
        {
            showStatus = true;
            isLoading = true;
            responseData = null;

            // Call the new (more powerful) backend method
            var result = await BackendClient.SubmitFormAsync(content);

            // Map the new result object into a Dictionary
            responseData = new()
            {
                // Condition
                { "conditionName", result.Condition.Name },
                { "conditionUmlsCode", result.Condition.UmlsCode ?? string.Empty },
                { "conditionDescription", result.Condition.Description },

                // Medication
                { "medicationName", result.Medication.MedicationDetails.Name },
                { "medicationUrl", result.Medication.MedicationDetails.Url },
                { "medicationUmlsCode", result.Medication.UmlsCode ?? string.Empty },
                { "medicationDescription", result.Medication.Description },
                { "medicationCharacteristics", result.Medication.MedicationDetails.Characteristics },
                { "medicationAtc", result.Medication.MedicationDetails.Atc },
                { "medicationDose", result.Medication.MedicationDetails.Dose },
                { "medicationIndication", result.Medication.MedicationDetails.Indication },
                { "medicationContraIndication", result.Medication.MedicationDetails.ContraIndication },
                { "medicationNarcoticCode", result.Medication.MedicationDetails.NarcoticCode },
                { "medicationImageUrl", result.Medication.MedicationDetails.ImageUrl },

                // Explanation from the backend
                { "explanation", result.Explanation }
            };
        }
        catch (Exception ex)
        {
            responseData = new()
            {
                // Condition
                { "conditionName", "Error" },
                { "conditionUmlsCode", string.Empty },
                { "conditionDescription", string.Empty },

                // Medication
                { "medicationName", string.Empty },
                { "medicationUrl", string.Empty },
                { "medicationUmlsCode", string.Empty },
                { "medicationDescription", string.Empty },
                { "medicationCharacteristics", string.Empty },
                { "medicationAtc", string.Empty },
                { "medicationDose", string.Empty },
                { "medicationIndication", string.Empty },
                { "medicationContraIndication", string.Empty },
                { "medicationNarcoticCode", string.Empty },
                { "medicationImageUrl", string.Empty },

                // Explanation from the backend
                { "explanation", $"An error occured: {ex.Message}" }
            };
        }
        finally
        {
            isLoading = false;
            semaphore.Release();
        }
    }

    private void OnBodyClicked(IEnumerable<string> selectedParts)
    {
        content.Localization = selectedParts;
    }
}
